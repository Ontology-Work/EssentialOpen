additional_properties: {}
apiVersion: '2023-05-01'
extended_location: null
location: <LOCATION>
name: <CONTAINER_INSTANCE>
properties:
  containers:
  - name: <CONTAINER_INSTANCE>
    properties:
      configMap:
        keyValuePairs: {}
      environmentVariables:
      - name: FQDN
        value: <CONTAINER_INSTANCE>.<LOCATION>.azurecontainer.io
      image: <CONTAINER_REGISTRY>.azurecr.io/essential-protege:latest
      ports:
      - port: 5100
        protocol: TCP
      - port: 5200
        protocol: TCP
      resources:
        requests:
          cpu: 1.0
          memoryInGB: 1.5
      volumeMounts:
      - mountPath: /opt/EssentialAM/server
        name: server
      - mountPath: /opt/EssentialAM/Repository
        name: repository
  imageRegistryCredentials:
  - server: <CONTAINER_REGISTRY>.azurecr.io
    username: <CONTAINER_REGISTRY>
    password: <ACR_PASSWORD>
  initContainers: []
  ipAddress:
    autoGeneratedDomainNameLabelScope: Unsecure
    dnsNameLabel: <CONTAINER_INSTANCE>
    fqdn: <CONTAINER_INSTANCE>.<LOCATION>.azurecontainer.io
    ports:
    - port: 5100
      protocol: TCP
    - port: 5200
      protocol: TCP
    type: Public
  isCreatedFromStandbyPool: false
  osType: Linux
  restartPolicy: Always
  sku: Standard
  volumes:
  - name: server
    azureFile:
      sharename: server
      storageAccountName: <STORAGE_ACCOUNT>
      storageAccountKey: <STG_ACCESS_KEY>
  - name: repository
    azureFile:
      sharename: repository
      storageAccountName: <STORAGE_ACCOUNT>
      storageAccountKey: <STG_ACCESS_KEY>
tags: {}
type: Microsoft.ContainerInstance/containerGroups
